name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      # --- 这是新增的步骤 ---
      - name: Package release artifacts
        # 将编译产物 dist 文件夹压缩成 release.zip
        run: zip -r release.zip ./dist
      # --- 新增结束 ---

      - name: Get changelog
        id: get_changelog
        run: |
          # This script will get the latest changelog from the CHANGELOG.md file
          # and set it as an output
          # Then, we can use it in the next step
          # The format of the changelog is:
          # ## [vX.X.X](link) (date)
          # ...
          # ## [vX.X.X](link) (date)
          # ...
          # We want to get the content between the first and second ##
          # We can use sed to do that
          # The sed command is:
          # sed -n '/^## \[v/ { :a; n; /^## \[v/q; p; ba; }' CHANGELOG.md
          # But we need to escape the special characters
          # The escaped command is:
          # sed -n '/^## \[v/ { :a; n; /^## \[v/q; p; ba; }' CHANGELOG.md
          # Then, we need to remove the first line
          # The command is:
          # sed -n '/^## \[v/ { :a; n; /^## \[v/q; p; ba; }' CHANGELOG.md | tail -n +2
          # Then, we need to set the output
          # echo "changelog=$(sed -n '/^## \[v/ { :a; n; /^## \[v/q; p; ba; }' CHANGELOG.md | tail -n +2)" >> $GITHUB_OUTPUT
          # We need to make it multiline
          # See https://github.com/actions/runner/issues/476
          # We will use EOF
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          sed -n '/^## \[v/,/^## \[v/p' CHANGELOG.md | sed '1d;$d' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.get_changelog.outputs.changelog }}
          fail_on_unmatched_files: true
          # --- 这是修改过的部分 ---
          # 告诉 action 把我们打包的 release.zip 文件上传
          files: release.zip
          # --- 修改结束 ---
